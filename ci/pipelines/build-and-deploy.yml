groups:
- name: self-update
  jobs:
  - self-update
- name: deployer
  jobs:
  - deploy
- name: pr
  jobs:
    - build

resource_types:
- name: pull-request
  type: registry-image
  source:
    repository: teliaoss/github-pr-resource

resources:
  - name: tech-ops
    type: git
    source:
      uri: https://github.com/alphagov/tech-ops.git

  - name: govwifi-product-page
    type: git
    source:
      uri: "https://github.com/alphagov/govwifi-product-page.git"

  - name: govwifi-product-page-pr
    type: pull-request
    source:
      repository: alphagov/govwifi-product-page
      access_token: ((github-access-token))
      disable_forks: true

  - name: organisations-list
    type: s3
    source:
      bucket: govwifi-production-product-page-data
      versioned_file: organisations.yml
      region_name: eu-west-2

  - name: whitelisted-emails
    type: s3
    source:
      bucket: govwifi-production-product-page-data
      versioned_file: domains.yml
      region_name: eu-west-2

  - name: deploy-to-paas
    # See https://github.com/alphagov/tech-ops/blob/master/reliability-engineering/pipelines/internal-apps.yml
    type: cf
    source:
      api: "https://api.cloud.service.gov.uk"
      organization: "govwifi"
      space: "production"
      username: ((govpaas-username))
      password: ((govpaas-password))

jobs:
  - name: self-update
    serial: true
    plan:
    - get: tech-ops
      params:
        submodules: none
    - get: govwifi-product-page
      trigger: true
    - task: set-pipelines
      file: tech-ops/ci/tasks/self-updating-pipeline.yaml
      input_mapping: {repository: govwifi-product-page}
      params:
        CONCOURSE_TEAM: govwifi
        CONCOURSE_PASSWORD: ((readonly_local_user_password))
        PIPELINE_PATH: ci/pipelines/build-and-deploy.yml
        PIPELINE_NAME: product-page-deploy

  - name: build
    interruptible: true
    disable_manual_trigger: true
    serial: true
    plan:
      - get: govwifi-product-page-pr
        trigger: true
        version: every
      - put: govwifi-product-page-pr
        params:
          status: pending
          path: govwifi-product-page-pr
      - task: bundle-govwifi-product-page-pr
        timeout: 15m
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: governmentpaas/cf-cli
            version: {digest: "sha256:ffde094aad190bd81049840631154794e9bfc353a281791ebcd3082f70e469fe"}
          inputs:
            - name: govwifi-product-page-pr
              path: repo
          run:
            path: sh
            dir: repo
            args:
            - -eu
            - -c
            - |
              apk --update add g++ musl-dev make nodejs nodejs-npm
              npm install --unsafe-perm
              bundle install --without development
              bundle exec middleman build
    on_success:
      put: govwifi-product-page-pr
      params:
        path: govwifi-product-page-pr
        status: success
    on_failure:
      put: govwifi-product-page-pr
      params:
        path: govwifi-product-page-pr
        status: failure
  - name: deploy
    serial: true
    plan:
      - get: govwifi-product-page
        trigger: true
      - get: organisations-list
        trigger: true
      - get: whitelisted-emails
        trigger: true
      - task: bundle-govwifi-product-page
        timeout: 15m
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: governmentpaas/cf-cli
            version: {digest: "sha256:ffde094aad190bd81049840631154794e9bfc353a281791ebcd3082f70e469fe"}
          inputs:
            - name: govwifi-product-page
              path: repo
            - name: whitelisted-emails
            - name: organisations-list
          outputs:
            - name: bundled
          run:
            path: sh
            dir: repo
            args:
            - -eu
            - -c
            - |
              apk --update add g++ musl-dev make nodejs nodejs-npm
              npm install --unsafe-perm
              bundle install --without development
              cp ../whitelisted-emails/domains.yml data/domains.yml
              cp ../organisations-list/organisations.yml data/organisations.yml
              bundle exec middleman build
              cp -r . ../bundled/
      - put: deploy-to-paas
        params:
          manifest: bundled/manifest.yml
          show_app_log: true
          path: bundled
